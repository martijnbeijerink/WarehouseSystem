package com.example.warehouse;

import javax.annotation.PostConstruct;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.transaction.Transactional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

@Component
public class LoadDatabase implements CommandLineRunner {

    private static final Logger logger = LoggerFactory.getLogger(LoadDatabase.class);

    @PersistenceContext
    private EntityManager entityManager;

    @Override
    @Transactional
    public void run(String... args) throws Exception {
        try {
            resetDatabase();
        } catch (Exception e) {
            logger.error("Error resetting database", e);
            throw e;
        }
    }

    @Transactional
    public void resetDatabase() {
        try {
            dropTables();
            createTables();
        } catch (Exception e) {
            logger.error("Error resetting database", e);
            throw e;
        }
    }

    private void dropTables() {
        String dropTablePLSQL =
                "BEGIN " +
                        "  BEGIN " +
                        "    EXECUTE IMMEDIATE 'DROP TABLE outbound_order'; " +
                        "  EXCEPTION " +
                        "    WHEN OTHERS THEN " +
                        "      IF SQLCODE != -942 THEN " + // ORA-00942: table or view does not exist
                        "        RAISE; " +
                        "      END IF; " +
                        "  END; " +
                        "  BEGIN " +
                        "    EXECUTE IMMEDIATE 'DROP TABLE sku'; " +
                        "  EXCEPTION " +
                        "    WHEN OTHERS THEN " +
                        "      IF SQLCODE != -942 THEN " + // ORA-00942: table or view does not exist
                        "        RAISE; " +
                        "      END IF; " +
                        "  END; " +
                        "  BEGIN " +
                        "    EXECUTE IMMEDIATE 'DROP TABLE monitoring_orders'; " +
                        "  EXCEPTION " +
                        "    WHEN OTHERS THEN " +
                        "      IF SQLCODE != -942 THEN " + // ORA-00942: table or view does not exist
                        "        RAISE; " +
                        "      END IF; " +
                        "  END; " +
                        "END;";
//                        "  BEGIN " +
//                        "    EXECUTE IMMEDIATE 'DROP TABLE outbound_cartons'; " +
//                        "  EXCEPTION " +
//                        "    WHEN OTHERS THEN " +
//                        "      IF SQLCODE != -942 THEN " + // ORA-00942: table or view does not exist
//                        "        RAISE; " +
//                        "      END IF; " +
//                        "  END; " +


        try {
            entityManager.createNativeQuery(dropTablePLSQL).executeUpdate();
        } catch (Exception e) {
            logger.error("Error executing drop tables SQL", e);
            throw e;
        }
    }

    private void createTables() {
        String createOrderTable =
                "CREATE TABLE outbound_order (" +
                        "  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                        "  order_number VARCHAR2(255), " +
                        "  sku VARCHAR2(255), " +
                        "  quantity NUMBER," +
                        "  status VARCHAR2(255))";

        String createSkuTable =
                "CREATE TABLE sku (" +
                        "  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                        "  sku VARCHAR2(255), " +
                        "  name VARCHAR2(255), " +
                        "  description VARCHAR2(255), " +
                        "  quantity NUMBER NOT NULL, " +
                        "  status VARCHAR2(255))";

        String createMonitoringOrdersTable =
                "CREATE TABLE monitoring_orders (" +
                        "  order_id NUMBER PRIMARY KEY, " +
                        "  sku VARCHAR2(50), " +
                        "  allocated_quantity NUMBER, " +
                        "  order_status VARCHAR2(50), " +
                        "  last_updated TIMESTAMP)";

        String createOutboundCartons =
                "CREATE TABLE outbound_cartons (" +
                        "  carton_id NUMBER PRIMARY KEY, " +
                        "  order_id NUMBER , " +
                        "  sku VARCHAR2(50), " +
                        "  quantity NUMBER, " +
                        "  carton_status VARCHAR2(50), " +
                        "  last_updated TIMESTAMP)";

        try {
            entityManager.createNativeQuery(createOrderTable).executeUpdate();
            entityManager.createNativeQuery(createSkuTable).executeUpdate();
            entityManager.createNativeQuery(createMonitoringOrdersTable).executeUpdate();
            entityManager.createNativeQuery(createOutboundCartons).executeUpdate();
        } catch (Exception e) {
            logger.error("Error executing create tables SQL", e);
            throw e;
        }
    }
}
