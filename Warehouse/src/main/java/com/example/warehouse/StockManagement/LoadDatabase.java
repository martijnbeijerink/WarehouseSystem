package com.example.warehouse.StockManagement;

import javax.annotation.PostConstruct;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.transaction.Transactional;

import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

@Component
public class LoadDatabase implements CommandLineRunner {

    @PersistenceContext
    private EntityManager entityManager;

    @Override
    @Transactional
    public void run(String... args) throws Exception {
        resetDatabase();
    }

    @Transactional
    public void resetDatabase() {
        dropTables();
        createTables();
    }

    private void dropTables() {
        String dropTablePLSQL =
                "BEGIN " +
                        "  BEGIN " +
                        "    EXECUTE IMMEDIATE 'DROP TABLE outbound_order'; " +
                        "  EXCEPTION " +
                        "    WHEN OTHERS THEN " +
                        "      IF SQLCODE != -942 THEN " + // ORA-00942: table or view does not exist
                        "        RAISE; " +
                        "      END IF; " +
                        "  END; " +
                        "  BEGIN " +
                        "    EXECUTE IMMEDIATE 'DROP TABLE sku'; " +
                        "  EXCEPTION " +
                        "    WHEN OTHERS THEN " +
                        "      IF SQLCODE != -942 THEN " + // ORA-00942: table or view does not exist
                        "        RAISE; " +
                        "      END IF; " +
                        "  END; " +
                        "END;";

        entityManager.createNativeQuery(dropTablePLSQL).executeUpdate();
    }

    private void createTables() {
        String createOrderTable =
                "CREATE TABLE outbound_order (" +
                        "  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                        "  order_number VARCHAR2(255), " +
                        "  sku VARCHAR2(255), " +
                        "  quantity NUMBER)";

        String createSkuTable =
                "CREATE TABLE sku (" +
                        "  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                        "  sku VARCHAR2(255), " +
                        "  name VARCHAR2(255), " +
                        "  description VARCHAR2(255), " +
                        "  quantity NUMBER NOT NULL, " +
                        "  status VARCHAR2(255))";

        entityManager.createNativeQuery(createOrderTable).executeUpdate();
        entityManager.createNativeQuery(createSkuTable).executeUpdate();
    }
}
